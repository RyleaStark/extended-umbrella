name: Update qsv-homebridge

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'   # daily at midnight

jobs:
  bump-homebridge:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Determine latest calendar tag from Docker Hub
        id: get_tag
        run: |
          TAGS=$(curl -s "https://hub.docker.com/v2/repositories/homebridge/homebridge/tags?page_size=100" \
                 | jq -r '.results[].name')
          LATEST=$(echo "$TAGS" \
                   | grep -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}$' \
                   | sort \
                   | tail -n1)
          echo "Latest tag: $LATEST"
          echo "latest=$LATEST" >> $GITHUB_OUTPUT

      - name: Read current version
        id: read_version
        run: |
          CUR=$(grep -E '^version:' extended-umbrella-qsv-homebridge/umbrel-app.yml \
                | sed -E 's/version: *\"([0-9-]+)\"/\1/')
          echo "Current version: $CUR"
          echo "current=$CUR" >> $GITHUB_OUTPUT

      - name: Fetch new SHA256 digest for latest tag
        id: get_digest
        run: |
          LATEST="${{ steps.get_tag.outputs.latest }}"

          # Get auth token
          TOKEN=$(curl -s "https://auth.docker.io/token?service=registry.docker.io&scope=repository:homebridge/homebridge:pull" | jq -r .token)

          # Get digest from Docker registry
          DIGEST=$(curl -s -H "Authorization: Bearer $TOKEN" \
                        -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
                        https://registry-1.docker.io/v2/homebridge/homebridge/manifests/${LATEST} \
                  | jq -r '.config.digest')

          echo "digest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Update files if new version found
        run: |
          LATEST="${{ steps.get_tag.outputs.latest }}"
          CUR="${{ steps.read_version.outputs.current }}"
          DIGEST="${{ steps.get_digest.outputs.digest }}"

          if [ "$LATEST" = "" ] || [ "$LATEST" = "$CUR" ]; then
            echo "No new tag to update (latest=$LATEST, current=$CUR)."
            exit 0
          fi

          echo "Updating from $CUR to $LATEST"
          sed -i "s|homebridge:.*@sha256.*|homebridge:${LATEST}@sha256:${DIGEST}|g" extended-umbrella-qsv-homebridge/docker-compose.yml
          sed -i "s/version: \".*\"/version: \"${LATEST}\"/" extended-umbrella-qsv-homebridge/umbrel-app.yml
          sed -i "s/Updates docker release tag to .*/Updates docker release tag to ${LATEST}/" extended-umbrella-qsv-homebridge/umbrel-app.yml

          # Update version in README.md table
          sed -i "s/\(qsv-homebridge[^|]*|[^|]*|\) *\`[0-9-]*\`/\1 \\`${LATEST}\`/" README.md

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add extended-umbrella-qsv-homebridge/docker-compose.yml
          git add extended-umbrella-qsv-homebridge/umbrel-app.yml
          git add README.md
          git commit -m "Bump qsv-homebridge to ${LATEST}" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref_name }}
